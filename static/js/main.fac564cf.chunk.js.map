{"version":3,"sources":["constants.js","Components/LoginForm.js","Components/ProductForm.js","Pages/OptionsPage.js","Components/Payment.js","Pages/PaymentPage.js","Components/Product.js","Containers/ProductsContainer.js","Pages/HomePage.js","Components/NavBar.js","Components/ClosedCheck.js","Pages/ReportsPage.js","Pages/Routes.js","Components/CheckButton.js","Components/CurrentCheck.js","Containers/CheckContainer.js","App.js","serviceWorker.js","Redux/Reducers/checkReducer.js","Redux/Reducers/currentCheckReducer.js","Redux/Reducers/productReducer.js","Redux/Reducers/rootReducer.js","Redux/Reducers/employeeReducer.js","Redux/store.js","index.js"],"names":["BASE_URL","LoginForm","useState","login","setLogin","password","name","form","setForm","dispatch","useDispatch","handleChange","e","target","value","className","onSubmit","preventDefault","endpoint","config","method","headers","body","JSON","stringify","fetch","then","r","json","data","employee","localStorage","token","type","payload","id","alert","error","onChange","placeholder","onClick","clear","ProductForm","price","tax","console","log","OptionsPage","Payment","currentCheck","useSelector","state","checks","products","reduce","total","product","charge","res","saleData","params","check_id","amount","credit","last_four","payment_method_details","card","last4","stripe_id","setCheck","status","nextCheckAction","length","find","check","open","recordSale","stripeKey","PaymentPage","Product","props","key","addProductToCurrentCheck","ItemContainer","useEffect","newProduct","product_id","newCheck","map","HomePage","Nav","currentEmployee","to","ClosedCheck","show","setShow","checkTotal","class","openCheck","ReportsPage","oneCheck","Routes","exact","path","component","Check","changeCurrentCheck","CurrentCheck","selCheck","delProduct","deleteProduct","CheckContainer","App","parse","Boolean","window","location","hostname","match","deleteCheck","arrOfChecks","filter","addCheck","newCheckArray","slice","index","findIndex","splice","addProduct","push","setStatus","newProductArray","arrOfProducts","oneProduct","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fac564cf.chunk.js","sourcesContent":[" //url for fetches\n// export const BASE_URL = 'http://localhost:3000'\nexport const BASE_URL = 'https://basketapp-api.herokuapp.com'","import React, { useState } from 'react'\nimport {useDispatch} from 'react-redux'\nimport {BASE_URL} from '../constants.js'\n\n\nfunction LoginForm() {\n    const [login, setLogin] = useState(true);\n    const [form, setForm] = useState({ login: '', password: '', name: '' });\n\n    const dispatch = useDispatch()\n\n    //create or login/auth\n    function handleSubmit(e) {\n        e.preventDefault();\n        const endpoint = login ? '/login' : '/employees';\n        const config = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(form)\n        };\n        fetch(BASE_URL + endpoint, config)\n            .then(r => r.json())\n            .then(data => {\n                if (data.employee) {\n                    localStorage.token = data.token;\n                    localStorage.employee = JSON.stringify(data.employee)\n                    dispatch({\n                        type: 'SET_EMPLOYEE',\n                        payload: data.employee\n                    });\n                    dispatch({\n                        type: 'SET_CURRENT_CHECK',\n                        payload: { id: -1 }\n                    })\n                }\n                else {\n                    alert(data.error)\n                }\n            })\n    }\n    //controlled form\n    function handleChange(e) {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    function changeFormButton() {\n        return login ? (\n            <button onClick={() => setLogin(false)}>Set new employee</button>\n        ) : (\n                <button onClick={() => setLogin(true)}>\n                    Employee log in\n            </button>\n            );\n    }\n    //clear current employee, current check and clear local storage\n    const handleLogout = () => {\n        dispatch({\n            type: 'CLEAR_EMPLOYEE'\n        })\n        dispatch({\n            type: 'SET_CURRENT_CHECK',\n            payload: {id: -1}\n        })\n        localStorage.clear()\n    }\n\n    return (\n        <div>\n            <div className=\"form-page\">\n                {/* if login true render login */}\n                <h1>{login ? 'Log In' : 'New Employee'}</h1>\n                <form onSubmit={handleSubmit}>\n                    Login:\n                    <input\n                        type=\"text\"\n                        name=\"login\"\n                        value={form.login}\n                        onChange={handleChange}\n                        placeholder=\"Login\"\n                    />\n                    Password:\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={form.password}\n                        onChange={handleChange}\n                        placeholder=\"Password\"\n                    />\n                    {\n                        // only render when creating employee\n                        !login &&\n                        <div>\n                            Name:\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={form.name}\n                                onChange={handleChange}\n                                placeholder=\"Name\"\n                            />\n                        </div>\n                    }\n                    <input type=\"submit\" />\n                </form>\n                {changeFormButton()}\n            </div>\n            {/* logout button */}\n            <button onClick={handleLogout}>Logout</button>\n        </div>\n    )\n}\n\nexport default LoginForm;\n","import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport {BASE_URL} from '../constants.js'\n\nexport default function ProductForm() {\n    const [form, setForm] = useState({ name: '', price: '', tax: '' });\n\n    const dispatch = useDispatch()\n\n    function handleChange(e) {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const config = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(form)\n        };\n        fetch(BASE_URL + '/products', config)\n            .then(r => r.json())\n            .then(data => {\n                console.log('data', data)\n                dispatch({\n                    type: 'ADD_PRODUCT',\n                    payload: data\n                });\n            })\n    }\n\n    return (\n            <div className=\"item-form\">\n                <h1>New Product</h1>\n                <form onSubmit={handleSubmit}>\n                    Name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={form.name}\n                        onChange={handleChange}\n                        placeholder=\"Name\"\n                    />\n                    Price:\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        value={form.price}\n                        onChange={handleChange}\n                        placeholder=\"Price\"\n                    />\n                    <input type=\"submit\" />\n                </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport LoginForm from '../Components/LoginForm.js'\nimport ProductForm from '../Components/ProductForm.js'\n\nexport default function OptionsPage() {\n    \n    return (\n        <div className=\"page\">\n            <LoginForm />\n            <ProductForm/>\n        </div>\n    )\n}","import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {BASE_URL} from '../constants.js'\n\n\n// => URLs\nconst CHARGES_URL = BASE_URL + '/charge_adapter'\n\n// => app component\nexport default function Payment() {\n    const dispatch = useDispatch()\n    const currentCheck = useSelector(state => state.currentCheck)\n    const checks = useSelector(state => state.checks)\n\n    //get check total\n    const getPrice = checkProducts => {\n        return checkProducts.reduce(function (total, product) {\n            return total + product.price;\n        }, 0);\n    }\n    //set price\n    const price = currentCheck.id === -1 ? 0 : getPrice(currentCheck.products)\n\n\n    //record sale in ront and back end\n    const recordSale = (saleData) => {\n        const params = {\n            check_id: currentCheck.id,\n            amount: price,\n            credit: true,\n            last_four: saleData.payment_method_details.card.last4,\n            stripe_id: saleData.id\n        }\n        fetch(BASE_URL + \"/sales\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        })\n            .then(r => r.json())\n            //close current check and move to next if available\n            .then(() => { \n                dispatch({\n                    type: 'SET_STATUS_CURRENT_CHECK',\n                    payload: false\n                })\n                dispatch({\n                    type: 'SET_STATUS',\n                    payload: {setCheck: currentCheck, status: false}\n                })\n                const nextCheckAction = checks.length > 0 ?\n                    {\n                        type: 'SET_CURRENT_CHECK',\n                        payload: checks.find(check => check.open && check.id !== currentCheck.id)\n                    }\n                    :\n                    {\n                        type: 'SET_CURRENT_CHECK',\n                        payload: { id: -1 }\n                    }\n                dispatch(nextCheckAction)\n            })\n    }\n\n    //make Stripe payment\n    const onToken = (token) => {\n\n        const charge = {\n            token: token.id\n        };\n\n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ charge: charge, price: price * 100 })\n        };\n\n        fetch(CHARGES_URL, config)\n            .then(res => res.json())\n            //redirect to confirmation page after payment is made\n            .then(saleData => {\n                recordSale(saleData)\n            })\n    }\n\n    return (\n        <div className=\"page\">\n            <StripeCheckout\n                token={onToken}\n                stripeKey={'pk_test_hu8PVV0R7B8kvBXe6dcMJzv900zdD0uCqV'}\n            />\n        </div>\n    )\n}","import React from 'react'\nimport Payment from '../Components/Payment.js'\n\nexport default function PaymentPage(){\n    return <Payment/>\n}","import React from 'react'\n\nexport default function Product(props) {\n    //current product\n    const product = props.product\n    return (\n        <div>\n            <button\n                key={product.id}\n                onClick={() => props.addProductToCurrentCheck(product)}\n            >{product.name}</button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Product from '../Components/Product.js'\nimport {BASE_URL} from '../constants.js'\n\nexport default function ItemContainer() {\n\n    //currentCheck\n    const currentCheck = useSelector(state => state.currentCheck)\n    //dispatch\n    const dispatch = useDispatch()\n    //products\n    const products = useSelector(state => state.products)\n    //fetch products from backend on render\n    useEffect(() => {\n        fetch(BASE_URL + '/products')\n            .then(r => r.json())\n            .then(products => {\n                // console.log(products)\n                const action = {\n                    type: 'SET_PRODUCTS',\n                    payload: products\n                };\n                dispatch(action);\n            })\n    }\n    \n        , [dispatch])\n\n    //Add product to products in current check, front end and back end\n    const addProductToCurrentCheck = (newProduct) => {\n        console.log(newProduct.id)\n        fetch(BASE_URL + '/sales', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                check_id: currentCheck.id,\n                product_id: newProduct.id\n            })\n        })\n            .then(r => r.json())\n            .then(data => {\n                const currentAction = {\n                    type: 'ADD_PRODUCT_TO_CURRENT_CHECK',\n                    payload: newProduct\n                }\n                dispatch(currentAction)\n                const checkAction = {\n                    type: 'ADD_PRODUCT_TO_CHECKS',\n                    payload: {newCheck: currentCheck, newProduct: newProduct}\n                }\n                dispatch(checkAction)\n            })\n    }\n\n    return (\n        <div className=\"page\">\n            {products.map(product => {\n                return <Product product={product} key={product.id} addProductToCurrentCheck={addProductToCurrentCheck} />\n            })}\n        </div>\n    )\n}\n","import React from 'react'\nimport ProductsContainer from '../Containers/ProductsContainer.js'\n\nexport default function HomePage() {\n    return (\n        <ProductsContainer/>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux'\n\nexport default function Nav() {\n    //current employee\n    const currentEmployee = useSelector(state => state.employee)\n    return (\n        <div className= \"nav-bar\">\n            <p className=\"item\">Logged in: {currentEmployee.name}</p>\n            <nav>\n                <Link  to=\"/\"><button>Products</button></Link>\n                <Link to=\"/options\"><button>Options</button></Link>\n                <Link to=\"/payment\"><button>Payment</button></Link>\n                <Link to=\"/reports\"><button>Reports</button></Link>\n            </nav>\n        </div>\n    );\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {BASE_URL} from '../constants.js'\n\nexport default function ClosedCheck(props) {\n    const dispatch = useDispatch()\n    //control whether check information is shown\n    const [show, setShow] = useState(false);\n    const check = props.check\n    //toggle showing check info\n    const toggleShow = () => {\n        setShow(!show)\n    }\n    //reopen check\n    const openCheck = () => {\n        const params = {\n            check_id: check.id\n        }\n        fetch(BASE_URL + '/reopen_check', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        })\n            .then(r => r.json())\n            .then(() => {\n                dispatch({\n                    type: 'SET_STATUS',\n                    payload: {setCheck: check, status: true}\n                })\n            })\n    }\n    //starting for check total\n    let checkTotal = 0\n    return (\n        <div>\n            {check.id}\n            <button onClick={() => toggleShow()}>Show Check</button>\n            {\n                show ?\n                    <div>\n                        <ul>\n                            {check.products.map(product => {\n                                checkTotal += product.price\n                                return <li key={product.id}>\n                                    <h5 key={product.name}>{product.name}</h5>\n                                    <h6 key={product.price}>{product.price}</h6>\n                                </li>\n                            })}\n                        </ul>\n                        <h4>Total: {checkTotal}</h4>\n                        <button class=\"ui button\" onClick={() => openCheck()}>Reopen Check</button>\n                    </div>\n                    :\n                    <div></div>\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector} from 'react-redux'\nimport ClosedCheck from '../Components/ClosedCheck.js'\n\nexport default function ReportsPage() {\n    const checks = useSelector(state => state.checks)\n\n    \n\n\n    return (\n        <div className=\"page\">\n            <h1>Closed Checks</h1>\n            {checks.length > 0 ?\n                checks.map(oneCheck => {\n                    if (!oneCheck.open) {\n                        return <div>\n                            <ClosedCheck key={oneCheck.id} check={oneCheck} />\n                        </div>\n                    }\n                    else {\n                        return <></>\n                    }\n                })\n                :\n                <></>}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport OptionsPage from './OptionsPage.js'\nimport PaymentPage from './PaymentPage.js'\nimport HomePage from './HomePage.js'\nimport NavBar from '../Components/NavBar.js'\nimport ReportsPage from './ReportsPage.js'\n\nexport default function Routes() {\n    return (\n        <div className=\"nav-page\">\n            <NavBar/>\n            <div>\n                <Switch >\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route exact path=\"/options\" component={OptionsPage} />\n                    <Route exact path=\"/payment\" component={PaymentPage} />\n                    <Route exact path=\"/reports\" component={ReportsPage} />\n\n                </Switch>\n            </div>\n        </div>\n    );\n}","import React from 'react'\n\nexport default function Check(props) {\n    const check = props.check\n    return (\n        <div key={check.id} onClick={() => props.changeCurrentCheck(check)}>\n            {check.id}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {BASE_URL} from '../constants.js'\n\nexport default function CurrentCheck() {\n    // const check = props.check\n    const check = useSelector(state => state.currentCheck)\n    const dispatch = useDispatch()\n    //delete item from check\n    const deleteProduct = product => {\n        fetch(BASE_URL + '/delete_from_check', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                check_id: check.id,\n                product_id: product.id\n            })\n        })\n            .then(r => r.json())\n            .then(data => {\n                    console.log()\n                    dispatch({\n                        type: 'DELETE_PRODUCT',\n                        payload: {selCheck: check, delProduct: product}\n                    })\n                    dispatch({\n                        type: 'DELETE_PRODUCT_FROM_CURRENT_CHECK',\n                        payload: product\n                    })\n\n            })\n        }\n    //starting for check total\n    let checkTotal = 0\n    return (\n        <div className=\"current-check-container\">\n            <h2 className=\"current-check-id\">{check.id === -1 ? \"\" : check.id}</h2>\n            {console.log(check)}\n            <ul className=\"check-items\">\n            {check.products.map(product => {\n                checkTotal += product.price\n                return <li key={product.id} className=\"check-item\">\n                    <h5 key={product.name}>{product.name}</h5>\n                    <h6 key={product.price}>{product.price}</h6>\n                    <button onClick={() => deleteProduct(product)}>Delete Product</button>\n                </li>\n            })}\n            </ul>\n            <h3>Total: {checkTotal}</h3>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CheckButton from '../Components/CheckButton.js'\nimport CurrentCheck from '../Components/CurrentCheck.js'\nimport {BASE_URL} from '../constants.js'\n\nexport default function CheckContainer() {\n    const dispatch = useDispatch();\n    const checks = useSelector(state => state.checks)\n    const currentEmployee = useSelector(state => state.employee)\n    const currentCheck = useSelector(state => state.currentCheck)\n\n    //create new check and make that current check\n    const newCheck = () => {\n        fetch(BASE_URL + '/checks', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ employee: currentEmployee })\n        })\n            .then(r => r.json())\n            .then(newCheck => { \n                dispatch({\n                    type: 'ADD_CHECK',\n                    payload: newCheck\n                })\n                dispatch({\n                    type: 'SET_CURRENT_CHECK',\n                    payload: (checks.length > 1 ? checks[checks.length-1] : checks[0])\n                })\n            })\n    }\n    //set initial current check\n    useEffect(() => {\n        if (currentCheck.id === -1 && checks.length > 0) {\n            dispatch({\n                type: 'SET_CURRENT_CHECK',\n                payload: checks.find(check => check.open)\n            })\n        }\n    }\n        , [checks, dispatch, currentCheck.id])\n    //get checks on mount\n    useEffect(() => {\n        fetch(BASE_URL + '/get_checks', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ employee: currentEmployee })\n        })\n            .then(r => r.json())\n            .then(checks => {\n                const action = {\n                    type: 'SET_CHECKS',\n                    payload: checks\n                };\n                dispatch(action);\n            })\n    }, [currentEmployee, dispatch]);\n    //set the current check\n    const changeCurrentCheck = (newCheck) => {\n        dispatch({\n            type: 'SET_CURRENT_CHECK',\n            payload: newCheck\n        })\n        console.log(newCheck)\n    }\n    return (\n        <div className=\"sidebar\">\n            {currentCheck.id === -1 ?\n                <div key={-1}>No Open Checks</div>\n                :\n                <CurrentCheck key={currentCheck.id} className=\"current-check\" />\n            }\n            <div className=\"check-button-container\">{\n                checks.length > 0 ?\n                checks.map(oneCheck => {\n                    if (oneCheck.id !== currentCheck.id && oneCheck.open) {\n                        return <div className=\"check-button\" key = {oneCheck.id}>\n                    <CheckButton key={oneCheck.id} check={oneCheck} changeCurrentCheck={changeCurrentCheck} class=\"item\" />\n                </div>\n                    }\n                    else {\n                        return <></>\n                    }\n                })\n                :\n                'no checks'\n                }</div>\n                <button className=\"button\" onClick={newCheck}>New Check</button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './Pages/Routes.js'\nimport CheckContainer from './Containers/CheckContainer';\nimport { useDispatch } from 'react-redux'\n\n\nfunction App() {\n  //if emlployee is logged in in localStorage, set the employee\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if(localStorage.length > 0)\n    dispatch({\n      type: 'SET_EMPLOYEE',\n      payload: JSON.parse(localStorage.employee)\n    });\n  }, [dispatch]\n  )\n  return (\n    <div id=\"app\">\n      <Router>\n        <CheckContainer />\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (state = [], { type, payload }) => {\n    switch (type) {\n        case 'SET_CHECKS':\n            return payload;\n        case 'DELETE_CHECK':\n            return deleteCheck(state, payload);\n        case 'ADD_CHECK':\n            return addCheck(state, payload);\n        case 'DELETE_PRODUCT':\n            return deleteProduct(state, payload);\n        case 'ADD_PRODUCT_TO_CHECKS':\n            return addProduct(state, payload);\n        case 'SET_STATUS':\n            return setStatus(state, payload)\n        default:\n            return state;\n    }\n};\n\nfunction deleteCheck(arrOfChecks, oneCheck) {\n    return [...arrOfChecks].filter(check => check.id !== oneCheck.id);\n}\nfunction addCheck(arrOfChecks, oneCheck) {\n    return [...arrOfChecks, oneCheck];\n}\nfunction deleteProduct(arrOfChecks, payload) {\n    let newCheckArray = arrOfChecks.slice()\n    console.log('hayyy')\n    newCheckArray.map(check => {\n        if (check.id === payload.selCheck.id) {\n            const index = check.products.findIndex(product => product.id === payload.delProduct.id)\n            return check.products.splice(index, 1)\n        }\n        else {\n            return []\n        }\n    })\n    return newCheckArray\n}\nfunction addProduct(arrOfChecks, payload) {\n    let newCheckArray = arrOfChecks.slice()\n    newCheckArray.map(check => {\n        if (check.id === payload.newCheck.id) {\n            return check.products.push(payload.newProduct)\n        }\n        else {\n            return []\n        }\n    })\n    return newCheckArray\n}\n//close/opens check\nfunction setStatus(arrOfChecks, payload) {\n    let newCheckArray = arrOfChecks.slice()\n    newCheckArray.map(check => {\n        if (check.id === payload.setCheck.id) {\n            return check.open = payload.status\n        }\n        else {\n            return check.open\n        }\n    })\n    return newCheckArray\n}","export default (state = { id: -1 }, { type, payload }) => {\n    switch (type) {\n        case 'SET_CURRENT_CHECK':\n            return payload;\n        case 'ADD_PRODUCT_TO_CURRENT_CHECK':\n            return addProduct(state, payload)\n        case 'DELETE_PRODUCT_FROM_CURRENT_CHECK':\n            return deleteProduct(state, payload)\n        case 'SET_STATUS_CURRENT_CHECK':\n            return setStatus(state, payload)\n        default:\n            return state;\n    }\n};\n\n//add new product to check\nfunction addProduct(currentCheck, newProduct) {\n    return {\n        ...currentCheck,\n        products: [...currentCheck.products, newProduct]\n    }\n}\n//deletes a product from the current check\nfunction deleteProduct(currentCheck, delProduct) {\n    let newProductArray = currentCheck.products.slice()\n    const index = currentCheck.products.findIndex(product => product.id === delProduct.id)\n    console.log('test', currentCheck.products.splice(index, 1))\n    newProductArray.splice(index, 1)\n    console.log('products',newProductArray)\n    return{\n        ...currentCheck,\n        products: newProductArray\n    }\n}\n//closes current check\nfunction setStatus(currentCheck, status) {\n    return {\n        ...currentCheck,\n        open: status\n    }\n}","export default (state = [], { type, payload }) => {\n    switch (type) {\n        case 'SET_PRODUCTS':\n            return payload;\n        case 'DELETE_PRODUCT':\n            return deleteProduct(state, payload);\n        case 'ADD_PRODUCT':\n            return addProduct(state, payload);\n        default:\n            return state;\n    }\n};\n\nfunction deleteProduct(arrOfProducts, oneProduct) {\n    return [...arrOfProducts].filter(product => product.id !== oneProduct.id);\n}\nfunction addProduct(arrOfProducts, oneProduct) {\n    return [...arrOfProducts, oneProduct];\n}","import { combineReducers } from 'redux';\nimport employeeReducer from './employeeReducer';\nimport checkReducer from './checkReducer';\nimport currentCheckReducer from './currentCheckReducer'\nimport productReducer from './productReducer'\n\n\nconst state = {\n    employee: employeeReducer,\n    currentCheck: currentCheckReducer,\n    checks: checkReducer,\n    products: productReducer\n};\n\nexport default combineReducers(state);","export default (state = {}, { type, payload }) => {\n    switch (type) {\n        case 'SET_EMPLOYEE':\n            return payload;\n        case 'CLEAR_EMPLOYEE':\n            return {};\n        default:\n            return state;\n    }\n};","import thunk from 'redux-thunk';\nimport rootReducer from './Reducers/rootReducer';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\n\nconst store = createStore(rootReducer,   compose(applyMiddleware(thunk)));\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store.js';\n// import 'semantic-ui-css/semantic.js'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}