{"version":3,"sources":["Components/LoginForm.js","Components/ProductForm.js","Pages/OptionsPage.js","Components/Payment.js","Pages/PaymentPage.js","Components/Product.js","Containers/ProductsContainer.js","Pages/HomePage.js","Components/NavBar.js","Components/ClosedCheck.js","Pages/ReportsPage.js","Pages/Routes.js","Components/CheckButton.js","Components/CurrentCheck.js","Containers/CheckContainer.js","App.js","serviceWorker.js","Redux/Reducers/checkReducer.js","Redux/Reducers/currentCheckReducer.js","Redux/Reducers/productReducer.js","Redux/Reducers/rootReducer.js","Redux/Reducers/employeeReducer.js","Redux/store.js","index.js"],"names":["LoginForm","useSelector","state","employee","useState","login","setLogin","password","name","form","setForm","dispatch","useDispatch","handleChange","e","target","value","className","onSubmit","preventDefault","endpoint","config","method","headers","body","JSON","stringify","fetch","then","r","json","data","localStorage","token","type","payload","id","alert","error","onChange","placeholder","onClick","ProductForm","price","tax","console","log","OptionsPage","Payment","currentCheck","checks","products","reduce","total","product","charge","BASE_URL","res","saleData","params","check_id","amount","credit","last_four","payment_method_details","card","last4","stripe_id","setCheck","status","nextCheckAction","length","find","check","open","recordSale","stripeKey","PaymentPage","Product","props","key","addProductToCurrentCheck","ItemContainer","useEffect","newProduct","product_id","newCheck","map","HomePage","Nav","currentEmployee","class","i","to","ClosedCheck","show","setShow","checkTotal","openCheck","ReportsPage","oneCheck","Routes","exact","path","component","Check","changeCurrentCheck","CurrentCheck","selCheck","delProduct","deleteProduct","CheckContainer","App","parse","Boolean","window","location","hostname","match","deleteCheck","arrOfChecks","filter","addCheck","newCheckArray","slice","index","findIndex","splice","addProduct","push","setStatus","newProductArray","arrOfProducts","oneProduct","combineReducers","middleware","applyMiddleware","thunk","createStore","rootReducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d8a27450.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction LoginForm() {\n    const employee = useSelector(state => state.employee);\n    const [login, setLogin] = useState(true);\n    const [form, setForm] = useState({ login: '', password: '', name: '' });\n\n    const dispatch = useDispatch()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const endpoint = login ? '/login' : '/employees';\n        const config = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(form)\n        };\n        fetch('https://basketapp-api.herokuapp.com//' + endpoint, config)\n            .then(r => r.json())\n            .then(data => {\n                if (data.employee) {\n                    localStorage.token = data.token;\n                    localStorage.employee = JSON.stringify(data.employee)\n                    dispatch({\n                        type: 'SET_EMPLOYEE',\n                        payload: data.employee\n                    });\n                    dispatch({\n                        type: 'SET_CURRENT_CHECK',\n                        payload: { id: -1 }\n                    })\n                }\n                else {\n                    alert(data.error)\n                }\n            })\n    }\n\n    function handleChange(e) {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    function changeFormButton() {\n        return login ? (\n            <button onClick={() => setLogin(false)}>Set new employee</button>\n        ) : (\n                <button onClick={() => setLogin(true)}>\n                    Employee log in\n            </button>\n            );\n    }\n\n    return (\n        <div>\n            <div className=\"form-page\">\n                <h1>{login ? 'Log In' : 'New Employee'}</h1>\n                <form onSubmit={handleSubmit}>\n                    Login:\n                    <input\n                        type=\"text\"\n                        name=\"login\"\n                        value={form.login}\n                        onChange={handleChange}\n                        placeholder=\"Login\"\n                    />\n                    Password:\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={form.password}\n                        onChange={handleChange}\n                        placeholder=\"Password\"\n                    />\n                    {\n                        !login &&\n                        <div>\n                            Name:\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={form.name}\n                                onChange={handleChange}\n                                placeholder=\"Name\"\n                            />\n                        </div>\n                    }\n                    <input type=\"submit\" />\n                </form>\n                {changeFormButton()}\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm;\n","import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default function ProductForm() {\n    const [form, setForm] = useState({ name: '', price: '', tax: '' });\n\n    const dispatch = useDispatch()\n\n    function handleChange(e) {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const config = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(form)\n        };\n        fetch('https://basketapp-api.herokuapp.com//products', config)\n            .then(r => r.json())\n            .then(data => {\n                console.log('data', data)\n                dispatch({\n                    type: 'ADD_PRODUCT',\n                    payload: data\n                });\n            })\n    }\n\n    return (\n            <div className=\"item-form\">\n                <h1>New Product</h1>\n                <form onSubmit={handleSubmit}>\n                    Name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={form.name}\n                        onChange={handleChange}\n                        placeholder=\"Name\"\n                    />\n                    Price:\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        value={form.price}\n                        onChange={handleChange}\n                        placeholder=\"Price\"\n                    />\n                    Tax:\n                    <input\n                        type=\"text\"\n                        name=\"tax\"\n                        value={form.tax}\n                        onChange={handleChange}\n                        placeholder=\"8875\"\n                    />\n                    <input type=\"submit\" />\n                </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport LoginForm from '../Components/LoginForm.js'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ProductForm from '../Components/ProductForm.js'\n\nexport default function OptionsPage() {\n    //current employee\n    const currentEmployee = useSelector(state => state.employee)\n    \n    return (\n        <div className=\"page\">\n            <LoginForm />\n            <ProductForm/>\n        </div>\n    )\n}","import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useSelector, useDispatch } from 'react-redux'\n\n\n// => URLs\nconst BASE_URL = 'https://basketapp-api.herokuapp.com/'\nconst CHARGES_URL = BASE_URL + '/charge_adapter'\n\n// => app component\nexport default function Payment() {\n    const dispatch = useDispatch()\n    const currentCheck = useSelector(state => state.currentCheck)\n    const checks = useSelector(state => state.checks)\n\n    //get check total\n    const getPrice = checkProducts => {\n        return checkProducts.reduce(function (total, product) {\n            return total + product.price;\n        }, 0);\n    }\n    //set price\n    const price = currentCheck.id === -1 ? 0 : getPrice(currentCheck.products)\n\n    //record sale in ront and back end\n    const recordSale = (saleData) => {\n        const params = {\n            check_id: currentCheck.id,\n            amount: price,\n            credit: true,\n            last_four: saleData.payment_method_details.card.last4,\n            stripe_id: saleData.id\n        }\n        fetch('https://basketapp-api.herokuapp.com/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        })\n            .then(r => r.json())\n            //close current check and move to next if available\n            .then(() => {\n                const closeAction = \n                dispatch({\n                    type: 'SET_STATUS_CURRENT_CHECK',\n                    payload: false\n                })\n                dispatch({\n                    type: 'SET_STATUS',\n                    payload: {setCheck: currentCheck, status: false}\n                })\n                const nextCheckAction = checks.length > 0 ?\n                    {\n                        type: 'SET_CURRENT_CHECK',\n                        payload: checks.find(check => check.open && check.id !== currentCheck.id)\n                    }\n                    :\n                    {\n                        type: 'SET_CURRENT_CHECK',\n                        payload: { id: -1 }\n                    }\n                dispatch(nextCheckAction)\n            })\n    }\n\n    //make Stripe payment\n    const onToken = (token) => {\n\n        const charge = {\n            token: token.id\n        };\n\n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ charge: charge, price: price * 100 })\n        };\n\n        fetch(CHARGES_URL, config)\n            .then(res => res.json())\n            //redirect to confirmation page after payment is made\n            .then(saleData => {\n                recordSale(saleData)\n            })\n    }\n\n    return (\n        <div className=\"page\">\n            <StripeCheckout\n                token={onToken}\n                stripeKey={'pk_test_hu8PVV0R7B8kvBXe6dcMJzv900zdD0uCqV'}\n            />\n        </div>\n    )\n}","import React from 'react'\nimport Payment from '../Components/Payment.js'\n\nexport default function PaymentPage(){\n    return <Payment/>\n}","import React from 'react'\n\nexport default function Product(props) {\n    //current product\n    const product = props.product\n    return (\n        <div>\n            <button\n                key={product.id}\n                onClick={() => props.addProductToCurrentCheck(product)}\n            >{product.name}</button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Product from '../Components/Product.js'\n\nexport default function ItemContainer() {\n\n    //currentCheck\n    const currentCheck = useSelector(state => state.currentCheck)\n    //dispatch\n    const dispatch = useDispatch()\n    //products\n    const products = useSelector(state => state.products)\n    //fetch products from backend on render\n    useEffect(() => {\n        fetch('https://basketapp-api.herokuapp.com//products')\n            .then(r => r.json())\n            .then(products => {\n                // console.log(products)\n                const action = {\n                    type: 'SET_PRODUCTS',\n                    payload: products\n                };\n                dispatch(action);\n            })\n    }\n\n        , [])\n\n    //Add product to products in current check, front end and back end\n    const addProductToCurrentCheck = (newProduct) => {\n        console.log(newProduct.id)\n        fetch('https://basketapp-api.herokuapp.com//sales', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                check_id: currentCheck.id,\n                product_id: newProduct.id\n            })\n        })\n            .then(r => r.json())\n            .then(data => {\n                const currentAction = {\n                    type: 'ADD_PRODUCT_TO_CURRENT_CHECK',\n                    payload: newProduct\n                }\n                dispatch(currentAction)\n                const checkAction = {\n                    type: 'ADD_PRODUCT_TO_CHECKS',\n                    payload: {newCheck: currentCheck, newProduct: newProduct}\n                }\n                dispatch(checkAction)\n            })\n    }\n\n    return (\n        <div className=\"page\">\n            {products.map(product => {\n                return <Product product={product} key={product.id} addProductToCurrentCheck={addProductToCurrentCheck} />\n            })}\n        </div>\n    )\n}\n","import React from 'react'\nimport ProductsContainer from '../Containers/ProductsContainer.js'\n\nexport default function HomePage() {\n    return (\n        <ProductsContainer/>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux'\n\nexport default function Nav() {\n    //current employee\n    const currentEmployee = useSelector(state => state.employee)\n    return (\n        <div className= \"nav-bar\">\n            <p class=\"item\">Logged in: {currentEmployee.name}</p>\n            <nav i>\n                <Link  to=\"/\"><button>Products</button></Link>\n                <Link to=\"/options\"><button>Options</button></Link>\n                <Link to=\"/payment\"><button>Payment</button></Link>\n                <Link to=\"/reports\"><button>Reports</button></Link>\n            </nav>\n        </div>\n    );\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default function ClosedCheck(props) {\n    const dispatch = useDispatch()\n    //control whether check information is shown\n    const [show, setShow] = useState(false);\n    const check = props.check\n    //toggle showing check info\n    const toggleShow = () => {\n        setShow(!show)\n    }\n    //reopen check\n    const openCheck = () => {\n        const params = {\n            check_id: check.id\n        }\n        fetch('https://basketapp-api.herokuapp.com//reopen_check', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        })\n            .then(r => r.json())\n            .then(() => {\n                dispatch({\n                    type: 'SET_STATUS',\n                    payload: {setCheck: check, status: true}\n                })\n            })\n    }\n    //starting for check total\n    let checkTotal = 0\n    return (\n        <div>\n            {check.id}\n            <button onClick={() => toggleShow()}>Show Check</button>\n            {\n                show ?\n                    <div>\n                        <ul>\n                            {check.products.map(product => {\n                                checkTotal += product.price\n                                return <li key={product.id}>\n                                    <h5 key={product.name}>{product.name}</h5>\n                                    <h6 key={product.price}>{product.price}</h6>\n                                </li>\n                            })}\n                        </ul>\n                        <h4>Total: {checkTotal}</h4>\n                        <button class=\"ui button\" onClick={() => openCheck()}>Reopen Check</button>\n                    </div>\n                    :\n                    <div></div>\n            }\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ClosedCheck from '../Components/ClosedCheck.js'\n\nexport default function ReportsPage() {\n    const checks = useSelector(state => state.checks)\n    const currentEmployee = useSelector(state => state.employee)\n\n    \n\n\n    return (\n        <div className=\"page\">\n            <h1>Closed Checks</h1>\n            {checks.length > 0 ?\n                checks.map(oneCheck => {\n                    if (!oneCheck.open) {\n                        return <div>\n                            <ClosedCheck key={oneCheck.id} check={oneCheck} />\n                        </div>\n                    }\n                })\n                :\n                'no checks'}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport OptionsPage from './OptionsPage.js'\nimport PaymentPage from './PaymentPage.js'\nimport HomePage from './HomePage.js'\nimport NavBar from '../Components/NavBar.js'\nimport ReportsPage from './ReportsPage.js'\n\nexport default function Routes() {\n    return (\n        <div>\n            <NavBar/>\n            <div>\n                <Switch >\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route exact path=\"/options\" component={OptionsPage} />\n                    <Route exact path=\"/payment\" component={PaymentPage} />\n                    <Route exact path=\"/reports\" component={ReportsPage} />\n\n                </Switch>\n            </div>\n        </div>\n    );\n}","import React from 'react'\n\nexport default function Check(props) {\n    const check = props.check\n    return (\n        <div key={check.id} onClick={() => props.changeCurrentCheck(check)}>\n            {check.id}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport default function CurrentCheck(props) {\n    const check = props.check\n    const dispatch = useDispatch()\n    //delete item from check\n    const deleteProduct = product => {\n        fetch('https://basketapp-api.herokuapp.com//delete_from_check', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                check_id: check.id,\n                product_id: product.id\n            })\n        })\n            .then(r => r.json())\n            .then(data => {\n                    console.log()\n                    dispatch({\n                        type: 'DELETE_PRODUCT',\n                        payload: {selCheck: check, delProduct: product}\n                    })\n                    dispatch({\n                        type: 'DELETE_PRODUCT_FROM_CURRENT_CHECK',\n                        payload: product\n                    })\n\n            })\n        }\n    //starting for check total\n    let checkTotal = 0\n    return (\n        <div className=\"current-check-container\">\n            <h2 className=\"current-check-id\">{check.id}</h2>\n            <ul className=\"check-items\">\n            {check.products.map(product => {\n                checkTotal += product.price\n                return <li key={product.id}>\n                    <h5 key={product.name}>{product.name}</h5>\n                    <h6 key={product.price}>{product.price}</h6>\n                    <button onClick={() => deleteProduct(product)}>Delete Product</button>\n                </li>\n            })}\n            </ul>\n            <h3>Total: {checkTotal}</h3>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CheckButton from '../Components/CheckButton.js'\nimport CurrentCheck from '../Components/CurrentCheck.js'\n\nexport default function CheckContainer() {\n    const dispatch = useDispatch();\n    const checks = useSelector(state => state.checks)\n    const currentEmployee = useSelector(state => state.employee)\n    const currentCheck = useSelector(state => state.currentCheck)\n\n    //create new check and make that current check\n    const newCheck = () => {\n        fetch('https://basketapp-api.herokuapp.com/checks', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ employee: currentEmployee })\n        })\n            .then(r => r.json())\n            .then(newCheck => { \n                dispatch({\n                    type: 'ADD_CHECK',\n                    payload: newCheck\n                })\n                dispatch({\n                    type: 'SET_CURRENT_CHECK',\n                    payload: checks[checks.length-1]\n                })\n            })\n    }\n    //set initial current check\n    useEffect(() => {\n        if (currentCheck.id === -1 && checks.length > 0) {\n            dispatch({\n                type: 'SET_CURRENT_CHECK',\n                payload: checks.find(check => check.open)\n            })\n        }\n    }\n        , [checks, dispatch])\n    //get checks on mount\n    useEffect(() => {\n        fetch('https://basketapp-api.herokuapp.com//get_checks', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ employee: currentEmployee })\n        })\n            .then(r => r.json())\n            .then(checks => {\n                const action = {\n                    type: 'SET_CHECKS',\n                    payload: checks\n                };\n                dispatch(action);\n            })\n    }, [currentEmployee]);\n    //set the current check\n    const changeCurrentCheck = (newCheck) => {\n        dispatch({\n            type: 'SET_CURRENT_CHECK',\n            payload: newCheck\n        })\n    }\n    return (\n        <div className=\"sidebar\">\n            {currentCheck.id === -1 ?\n                <div key={-1}>No Open Checks</div>\n                :\n                <CurrentCheck key={currentCheck.id} check={currentCheck} className=\"current-check\" />\n            }\n            <div className=\"check-button-container\">{\n                checks.length > 0 ?\n                checks.map(oneCheck => {\n                    if (oneCheck.id !== currentCheck.id && oneCheck.open) {\n                        return <div className=\"check-button\">\n                    <CheckButton key={oneCheck.id} check={oneCheck} changeCurrentCheck={changeCurrentCheck} class=\"item\" />\n                </div>\n                    }\n                })\n                :\n                'no checks'\n                }</div>\n                <button className=\"button\" onClick={newCheck}>New Check</button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './Pages/Routes.js'\nimport CheckContainer from './Containers/CheckContainer';\nimport { useDispatch } from 'react-redux'\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if(localStorage.length > 0)\n    dispatch({\n      type: 'SET_EMPLOYEE',\n      payload: JSON.parse(localStorage.employee)\n    });\n  }, [dispatch]\n  )\n  return (\n    <div id=\"app\">\n      <Router>\n        <CheckContainer />\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (state = [], { type, payload }) => {\n    switch (type) {\n        case 'SET_CHECKS':\n            return payload;\n        case 'DELETE_CHECK':\n            return deleteCheck(state, payload);\n        case 'ADD_CHECK':\n            return addCheck(state, payload);\n        case 'DELETE_PRODUCT':\n            return deleteProduct(state, payload);\n        case 'ADD_PRODUCT_TO_CHECKS':\n            return addProduct(state, payload);\n        case 'SET_STATUS':\n            return setStatus(state, payload)\n        default:\n            return state;\n    }\n};\n\nfunction deleteCheck(arrOfChecks, oneCheck) {\n    return [...arrOfChecks].filter(check => check.id !== oneCheck.id);\n}\nfunction addCheck(arrOfChecks, oneCheck) {\n    return [...arrOfChecks, oneCheck];\n}\nfunction deleteProduct(arrOfChecks, payload) {\n    let newCheckArray = arrOfChecks.slice()\n    console.log('hayyy')\n    newCheckArray.map(check => {\n        if (check.id === payload.selCheck.id) {\n            const index = check.products.findIndex(product => product.id === payload.delProduct.id)\n            return check.products.splice(index, 1)\n        }\n    })\n    return newCheckArray\n}\nfunction addProduct(arrOfChecks, payload) {\n    let newCheckArray = arrOfChecks.slice()\n    newCheckArray.map(check => {\n        if (check.id === payload.newCheck.id) {\n            return check.products.push(payload.newProduct)\n        }\n    })\n    return newCheckArray\n}\n//close/opens check\nfunction setStatus(arrOfChecks, payload) {\n    let newCheckArray = arrOfChecks.slice()\n    newCheckArray.map(check => {\n        if (check.id === payload.setCheck.id) {\n            return check.open = payload.status\n        }\n    })\n    return newCheckArray\n}","export default (state = { id: -1 }, { type, payload }) => {\n    switch (type) {\n        case 'SET_CURRENT_CHECK':\n            return payload;\n        case 'ADD_PRODUCT_TO_CURRENT_CHECK':\n            return addProduct(state, payload)\n        case 'DELETE_PRODUCT_FROM_CURRENT_CHECK':\n            return deleteProduct(state, payload)\n        case 'SET_STATUS_CURRENT_CHECK':\n            return setStatus(state, payload)\n        default:\n            return state;\n    }\n};\n//add new product to check\nfunction addProduct(currentCheck, newProduct) {\n    return {\n        ...currentCheck,\n        products: [...currentCheck.products, newProduct]\n    }\n}\n//deletes a product from the current check\nfunction deleteProduct(currentCheck, delProduct) {\n    let newProductArray = currentCheck.products.slice()\n    const index = currentCheck.products.findIndex(product => product.id === delProduct.id)\n    console.log('test', currentCheck.products.splice(index, 1))\n    newProductArray.splice(index, 1)\n    console.log('products',newProductArray)\n    return{\n        ...currentCheck,\n        products: newProductArray\n    }\n}\n//closes current check\nfunction setStatus(currentCheck, status) {\n    return {\n        ...currentCheck,\n        open: status\n    }\n}","export default (state = [], { type, payload }) => {\n    switch (type) {\n        case 'SET_PRODUCTS':\n            return payload;\n        case 'DELETE_PRODUCT':\n            return deleteProduct(state, payload);\n        case 'ADD_PRODUCT':\n            return addProduct(state, payload);\n        default:\n            return state;\n    }\n};\n\nfunction deleteProduct(arrOfProducts, oneProduct) {\n    return [...arrOfProducts].filter(product => product.id !== oneProduct.id);\n}\nfunction addProduct(arrOfProducts, oneProduct) {\n    return [...arrOfProducts, oneProduct];\n}","import { combineReducers } from 'redux';\nimport employeeReducer from './employeeReducer';\nimport checkReducer from './checkReducer';\nimport currentCheckReducer from './currentCheckReducer'\nimport productReducer from './productReducer'\n\n\nconst state = {\n    employee: employeeReducer,\n    currentCheck: currentCheckReducer,\n    checks: checkReducer,\n    products: productReducer\n};\n\nexport default combineReducers(state);","export default (state = {}, { type, payload }) => {\n    switch (type) {\n        case 'SET_EMPLOYEE':\n            return payload;\n        case 'CLEAR_EMPLOYEE':\n            return {};\n        default:\n            return state;\n    }\n};","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers/rootReducer';\n\nconst middleware = applyMiddleware(thunk);\n\nexport default createStore(rootReducer, middleware);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store.js';\n// import 'semantic-ui-css/semantic.js'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}